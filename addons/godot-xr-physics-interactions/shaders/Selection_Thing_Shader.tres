[gd_resource type="ShaderMaterial" load_steps=4 format=3 uid="uid://c3xhclee64xkt"]

[sub_resource type="Shader" id="Shader_870su"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.2.rc1's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_never,cull_back,diffuse_burley,specular_schlick_ggx,unshaded,depth_test_disabled;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	MODELVIEW_MATRIX = VIEW_MATRIX * mat4(INV_VIEW_MATRIX[0], INV_VIEW_MATRIX[1], INV_VIEW_MATRIX[2], MODEL_MATRIX[3]);
	MODELVIEW_NORMAL_MATRIX = mat3(MODELVIEW_MATRIX);
}






void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	ALPHA *= albedo.a * albedo_tex.a;
}
"

[sub_resource type="Gradient" id="Gradient_lo6no"]
offsets = PackedFloat32Array(0.236559, 0.408602, 0.677419)
colors = PackedColorArray(0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_1l4be"]
gradient = SubResource("Gradient_lo6no")
fill = 1
fill_from = Vector2(0.5, 0.5)
fill_to = Vector2(0.2, 0.9)
metadata/_snap_enabled = true

[resource]
render_priority = 0
shader = SubResource("Shader_870su")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/point_size = 1.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = SubResource("GradientTexture2D_1l4be")
